# Generated by Django 3.2.9 on 2021-12-14 11:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('drops', '0002_initial'),
        ('drops_collections', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='dropview',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_view', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='dropsubscription',
            name='drop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_subscription', to='drops.drop', verbose_name='Drop'),
        ),
        migrations.AddField(
            model_name='dropsubscription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drop_subscription', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='droplike',
            name='drop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drop_like', to='drops.drop', verbose_name='Drop'),
        ),
        migrations.AddField(
            model_name='droplike',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_like', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='drop',
            name='artist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artists_drops', to=settings.AUTH_USER_MODEL, verbose_name='Artist'),
        ),
        migrations.AddField(
            model_name='drop',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop', to='drops.category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='drop',
            name='from_collection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drops', to='drops_collections.collection', verbose_name='From collection'),
        ),
        migrations.AddField(
            model_name='drop',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owners_drops', to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.AddField(
            model_name='drop',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_parent', to='drops.drop', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='drop',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='drop', to='drops.Tag', verbose_name='Tags'),
        ),
        migrations.AddConstraint(
            model_name='specialcollectiondrop',
            constraint=models.UniqueConstraint(fields=('drop', 'collection'), name='unique_special_collection_drop'),
        ),
        migrations.AddConstraint(
            model_name='dropview',
            constraint=models.UniqueConstraint(fields=('user', 'drop'), name='unique_drop_view'),
        ),
        migrations.AddConstraint(
            model_name='dropsubscription',
            constraint=models.UniqueConstraint(fields=('user', 'drop'), name='unique_drop_subscription'),
        ),
        migrations.AddConstraint(
            model_name='droplike',
            constraint=models.UniqueConstraint(fields=('user', 'drop'), name='unique_drop_like'),
        ),
    ]
